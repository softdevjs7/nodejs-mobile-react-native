
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    
    sourceSets {
        main {
            jniLibs.srcDirs 'libnode/bin/'
        }
        main.assets.srcDirs += '../install/resources/nodejs-modules'
    }
    
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.facebook.react:react-native:+'
}

task GenerateNodeProjectAssetsLists {
    description "Generates a list for runtime copying"

    doLast{
        String file_list = "";
        String dir_list = "";

        def assets_tree = fileTree(dir: "${rootProject.projectDir}/../nodejs-assets/")
        assets_tree.include('nodejs-project/**') // Include the node project.
        assets_tree.exclude('**/.*') // Exclude files and dirs starting with .
        assets_tree.exclude('**/*~') // Exclude temporary files.
        assets_tree.visit { assetFile ->
            if (assetFile.isDirectory()) {
                dir_list += "${assetFile.relativePath}\n"
            } else {
                file_list += "${assetFile.relativePath}\n"
            }
        }
        def file_list_path = new File( "${rootProject.projectDir}/../nodejs-assets/file.list")
        file_list_path.write file_list
        def dir_list_path = new File( "${rootProject.projectDir}/../nodejs-assets/dir.list")
        dir_list_path.write dir_list
    }

    project.android.sourceSets.main.assets.srcDirs+="${rootProject.projectDir}/../nodejs-assets/"
}

tasks.getByPath(":${project.name}:preBuild").dependsOn GenerateNodeProjectAssetsLists
